

import time          # allows us to handle various operations regarding time, its conversions and representations, which find its use in various applications in life. 
import random        # allows to choose random strings and numbers 
import sys           # The sys module provides information about constants, functions and methods of the Python interpreter.

# just of effects. add a delay of 1 second before performing any action
TIME_DELAY = 1
MAX_VALUE= 100
MAX_DICE_VALUE= 6

# snake takes you down from 'key' to 'value'
snakes = {
    8: 4,
    18: 1,
    26: 10,
    39: 5,
    54: 36,
    60: 23,
    75: 28,
    85: 59,
    97: 12
   
   
}

# ladder takes you up from 'key' to 'value'
ladders = {
    6: 14,
    17: 94,
    38: 59,
    49: 67,
    61: 78,
    73: 86,
    88: 95
    
           
    
}
# Lists of Abbreviations used to express the turn
player_turn_text = [
    "Its your turn.",
    "Come on.",
    "Proceed.",
    "Roll the dice man.",
    "Ready to win?",
    "",
]

snake_bite = [
    "BOOHOO",
    "Bummer",
    "OOPS! Snake bite",
    "Oh NOO!",
    "DAMN! Snake bite"
]

ladder_jump = [
    "WOOHOO!",
    "WOOOW!",
    "YES!! You're winnin' it.",
    "Oh my God...",
    "yaayyy"
]
# used a random module to roll dice with value between 1 to 6
def get_dice_value():
    time.sleep(TIME_DELAY)
    dice_value = random.randint(1, MAX_DICE_VALUE)           #randint is used to select a random number from a gib=ven range,ie , here from 1 to MAX_DICE_VALUE
    print("It's a " + str(dice_value))
    return dice_value

# used a random module to print an abbreviation form snake_bite and player goes down to tail when get bitten by snake
def got_snake_bite(old_value, current_value, player_name):
    print("\n" + random.choice(snake_bite) + " ~~~~~~~~>")   #random.choice helps to choose  a random input from a list
    
    print("\n" + player_name + " got a snake bite. Down from " + str(old_value) + " to " + str(current_value))

# used a random module to print an abbreviation form ladder_jump and player climbs the stair to top 
def got_ladder_jump(old_value, current_value, player_name):
    print("\n" + random.choice(ladder_jump) + " ########")
    print("\n" + player_name + " climbed the ladder from " + str(old_value) + " to " + str(current_value))

# used to measure current value while rolling dice value and also used max value condition to tell person that what is required to win 
def snake_ladder(player_name, current_value, dice_value):
    time.sleep(TIME_DELAY)
    old_value = current_value
    current_value = current_value + dice_value

    if current_value > MAX_VALUE:
        print("You need " + str(MAX_VALUE- old_value) + " to win this game. Keep trying.")
        return old_value

    print("\n" + player_name + " moved from " + str(old_value) + " to " + str(current_value))

 # The get() method returns the value for the given key, if present in the dictionary. If not, then it will return None (if get() is used with only one argument)
 # used for snake bite and ladder climb to take value from dictionary to climb

   
    if current_value in snakes:
        final_value = snakes.get(current_value)
        got_snake_bite(current_value, final_value, player_name)

    elif current_value in ladders:
        final_value = ladders.get(current_value)
        got_ladder_jump(current_value, final_value, player_name)

    else:
        final_value = current_value

    return final_value

# to check whether player has won or not
def check_win(player_name, position):
    time.sleep(TIME_DELAY)
    if MAX_VALUE== position:
        print("\n\n\nThats it.\n\n" + player_name + " won the game.")
        print("Congratulations " + player_name)
        print("\nThank you for playing the game.\n\n")
        sys.exit(1)                                                   # tells developer to exit code
# start program which will be executed
def start():

 #welcome message       
   
    print("""
    Welcome to Snake and Ladder Game.                            
    Developed by: Abhishek Jha, Amitesh Uppal, Aditya Gupta
    
    Rules:
      1. Initally both the players are at starting position i.e. 0. 
         Take it in turns to roll the dice. 
         Move forward the number of spaces shown on the dice.
      2. If you lands at the bottom of a ladder, you can move up to the top of the ladder.
      3. If you lands on the head of a snake, you must slide down to the bottom of the snake.
      4. The first player to get to the FINAL position is the winner.
      5. Hit enter to roll the dice.
      
      ladders =                        snakes = 
      6: 14,                            8:4,          
      17: 94,                           18:1,
      38: 59,                           26:10,
      49: 67,                           39:5, 
      61: 78,                           54:36,
      73: 86,                           60:23, 
      88: 91                            75:28,  
                                        85:59,
                                        97:12 
                          

   
    
      """)
    
   
   
    time.sleep(TIME_DELAY)

#initial positions of players
    player1_current_position = 0
    player2_current_position = 0
    player3_current_position = 0
    player4_current_position = 0
    
    s=0                                                           # defined a bool to execute a program
    while True:                                                   # used to take all defined programs true
        time.sleep(TIME_DELAY)
       
        if s==0:
            player_number=int(input('Enter number of players='))  # only 2,3,4 players can play game
            
        if player_number > 4 or player_number < 2:
                print("Must be less than 5 and greater than 1")     # as its a while loop no of players loop will keep on going until integers input is 2,3,4

            							  
        elif player_number==2:
            if s==0:
                player1_name = input("Please enter the name of first player: ")          # input of name of players
                player2_name = input("Please enter the name of second player: ")
                print("\nMatch will be played between '" + player1_name + "' and '" + player2_name + "'\n")
                s=1   
              

             # s=1 is used to break the reccursion of player_number line so that no of players is not asked every time after 1 loop is completed 
            
                                                              

            input_1 = input("\n" + player1_name + ": " + random.choice(player_turn_text) + " Hit the enter to roll the dice: ")
            print("\nRolling the dice...")
            dice_value = get_dice_value()     # used a defined function to roll a dice
            time.sleep(TIME_DELAY)
            print(player1_name + " moving....")
            player1_current_position = snake_ladder(player1_name, player1_current_position, dice_value)

            check_win(player1_name, player1_current_position)                        #used a defined function to check whether player has won or not

            input_2 = input("\n" + player2_name + ": " + random.choice(player_turn_text) + " Hit the enter to roll the dice: ")
            print("\nRolling the dice...")
            dice_value = get_dice_value()
            time.sleep(TIME_DELAY)
            print(player2_name + " moving....")
            player2_current_position = snake_ladder(player2_name, player2_current_position, dice_value)

            check_win(player2_name, player2_current_position)
          
        
            
        elif player_number==3:
            if s==0:
                player1_name = input("Please enter the name of first player: ")
                player2_name = input("Please enter the name of second player: ")
                player3_name = input("Please enter the name of third player: ")
                print("\nMatch will be played between '" + player1_name + "' and '" + player2_name + "' and '"+ player3_name+"'\n")
                s=1
            
            input_1 = input("\n" + player1_name + ": " + random.choice(player_turn_text) + " Hit the enter to roll the dice: ")
            print("\nRolling the dice...")
            dice_value = get_dice_value()
            time.sleep(TIME_DELAY)
            print(player1_name + " moving....")
            player1_current_position = snake_ladder(player1_name, player1_current_position, dice_value)

            check_win(player1_name, player1_current_position)

            input_2 = input("\n" + player2_name + ": " + random.choice(player_turn_text) + " Hit the enter to roll the dice: ")
            print("\nRolling the dice...")
            dice_value = get_dice_value()
            time.sleep(TIME_DELAY)
            print(player2_name + " moving....")
            player2_current_position = snake_ladder(player2_name, player2_current_position, dice_value)

            check_win(player2_name, player2_current_position)
        
            input_3 = input("\n" + player3_name + ": " + random.choice(player_turn_text) + " Hit the enter to roll the dice: ")
            print("\nRolling the dice...")
            dice_value = get_dice_value()
            time.sleep(TIME_DELAY)
            print(player3_name + " moving....")
            player3_current_position = snake_ladder(player3_name, player3_current_position, dice_value)

            check_win(player3_name, player3_current_position)
            
        
        
            
        elif player_number==4:
            if s==0:
                player1_name = input("Please enter the name of first player: ")
                player2_name = input("Please enter the name of second player: ")
                player3_name = input("Please enter the name of third player: ")
                player4_name = input("Please enter the name of fourth player: ")
                print("\nMatch will be played between '" + player1_name + "' and '" + player2_name + "' and '"+player3_name+"' and '"+player4_name+"'\n")
                s=1         
            
            input_1 = input("\n" + player1_name + ": " + random.choice(player_turn_text) + " Hit the enter to roll dice: ")
            print("\nRolling the dice...")
            dice_value = get_dice_value()
            time.sleep(TIME_DELAY)
            print(player1_name + " moving....")
            player1_current_position = snake_ladder(player1_name, player1_current_position, dice_value)

            check_win(player1_name, player1_current_position)

            input_2 = input("\n" + player2_name + ": " + random.choice(player_turn_text) + " Hit the enter to roll dice: ")
            print("\nRolling the dice...")
            dice_value = get_dice_value()
            time.sleep(TIME_DELAY)
            print(player2_name + " moving....")
            player2_current_position = snake_ladder(player2_name, player2_current_position, dice_value)

            check_win(player2_name, player2_current_position)
        
            input_3 = input("\n" + player3_name + ": " + random.choice(player_turn_text) + " Hit the enter to roll dice: ")
            print("\nRolling the dice...")
            dice_value = get_dice_value()
            time.sleep(TIME_DELAY)
            print(player3_name + " moving....")
            player3_current_position = snake_ladder(player3_name, player3_current_position, dice_value)

            check_win(player3_name, player3_current_position)
            
        
            input_4 = input("\n" + player4_name + ": " + random.choice(player_turn_text) + " Hit enter to roll the dice: ")
            print("\nRolling the dice...")
            dice_value = get_dice_value()
            time.sleep(TIME_DELAY)
            print(player4_name + " moving....")
            player4_current_position = snake_ladder(player4_name, player4_current_position, dice_value)

            check_win(player4_name, player4_current_position)
       

#It checks if a module is being imported or not.
#In other words, the code within the 'if' block will be executed only when the code runs directly. Here 'directly' means 'not imported'.

if __name__ == "__main__":
    start()